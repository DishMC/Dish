diff --git a/src/main/java/net/minecraft/server/level/ServerEntity.java b/src/main/java/net/minecraft/server/level/ServerEntity.java
index f783a3e..4d891a8 100644
--- a/src/main/java/net/minecraft/server/level/ServerEntity.java
+++ b/src/main/java/net/minecraft/server/level/ServerEntity.java
@@ -55,6 +55,7 @@ public class ServerEntity {
     private final boolean trackDelta;
     private final Consumer<Packet<?>> broadcast;
     private final VecDeltaCodec positionCodec = new VecDeltaCodec();
+    private final Set<net.minecraft.server.network.ServerPlayerConnection> seenBy; // dish
     private int yRotp;
     private int xRotp;
     private int yHeadRotp;
@@ -67,9 +68,10 @@ public class ServerEntity {
     @Nullable
     private List<SynchedEntityData.DataValue<?>> trackedDataValues;
 
-    public ServerEntity(ServerLevel serverlevel, Entity entity, int i, boolean flag, Consumer<Packet<?>> consumer) {
+    public ServerEntity(ServerLevel serverlevel, Entity entity, int i, boolean flag, Consumer<Packet<?>> consumer, Set<net.minecraft.server.network.ServerPlayerConnection> seenBy) {
         this.ap = Vec3.ZERO;
-        this.lastPassengers = Collections.emptyList();
+        this.lastPassengers = com.google.common.collect.ImmutableList.of(); // dish -- optimize lastPassengers
+        this.seenBy = seenBy; // dish
         this.level = serverlevel;
         this.broadcast = consumer;
         this.entity = entity;
@@ -101,7 +103,7 @@ public class ServerEntity {
 
         Entity entity = this.entity;
 
-        if (entity instanceof ItemFrame) {
+        if (!this.seenBy.isEmpty() && entity instanceof ItemFrame) { // dish -- only update item frames if players can see them
             ItemFrame itemframe = (ItemFrame) entity;
 
             if (this.tickCount % 10 == 0) {
