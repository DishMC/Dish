diff --git a/minecraft/server/packs/resources/SimpleReloadInstance.java b/minecraft/server/packs/resources/SimpleReloadInstance.java
index 88764b8..63f6968 100644
--- a/minecraft/server/packs/resources/SimpleReloadInstance.java
+++ b/minecraft/server/packs/resources/SimpleReloadInstance.java
@@ -41,7 +41,7 @@ public class SimpleReloadInstance<S> implements ReloadInstance {
         Objects.requireNonNull(this.doneTaskCounter);
         completablefuture.thenRun(atomicinteger::incrementAndGet);
         List<CompletableFuture<S>> list1 = Lists.newArrayList();
-        final CompletableFuture<?> completablefuture1 = completablefuture;
+        CompletableFuture<?> completablefuture1 = completablefuture;
 
         this.preparingListeners = Sets.newHashSet(list);
 
@@ -50,6 +50,7 @@ public class SimpleReloadInstance<S> implements ReloadInstance {
         for (Iterator iterator = list.iterator(); iterator.hasNext(); completablefuture1 = completablefuture2) {
             final PreparableReloadListener preparablereloadlistener = (PreparableReloadListener) iterator.next();
 
+            CompletableFuture<?> finalCompletablefuture = completablefuture1;
             completablefuture2 = simplereloadinstance_statefactory.create(new PreparableReloadListener.PreparationBarrier() {
                 @Override
                 public <T> CompletableFuture<T> wait(T t0) {
@@ -60,7 +61,7 @@ public class SimpleReloadInstance<S> implements ReloadInstance {
                         }
 
                     });
-                    return SimpleReloadInstance.this.allPreparations.thenCombine(completablefuture1, (unit, object) -> {
+                    return SimpleReloadInstance.this.allPreparations.thenCombine(finalCompletablefuture, (unit, object) -> {
                         return t0;
                     });
                 }
