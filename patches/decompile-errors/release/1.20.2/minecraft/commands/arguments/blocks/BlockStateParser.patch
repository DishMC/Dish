diff --git a/minecraft/commands/arguments/blocks/BlockStateParser.java b/minecraft/commands/arguments/blocks/BlockStateParser.java
index 370e0a4..15525b1 100644
--- a/minecraft/commands/arguments/blocks/BlockStateParser.java
+++ b/minecraft/commands/arguments/blocks/BlockStateParser.java
@@ -276,7 +276,7 @@ public class BlockStateParser {
         Iterator iterator = property.getPossibleValues().iterator();
 
         while (iterator.hasNext()) {
-            T t0 = (Comparable) iterator.next();
+            T t0 = (T) iterator.next();
 
             if (t0 instanceof Integer) {
                 Integer integer = (Integer) t0;
@@ -548,8 +548,8 @@ public class BlockStateParser {
         Optional<T> optional = property.getValue(s);
 
         if (optional.isPresent()) {
-            this.state = (BlockState) this.state.setValue(property, (Comparable) optional.get());
-            this.properties.put(property, (Comparable) optional.get());
+            this.state = this.state.setValue(property, optional.get());
+            this.properties.put(property, optional.get());
         } else {
             this.reader.setCursor(i);
             throw BlockStateParser.ERROR_INVALID_VALUE.createWithContext(this.reader, this.id.toString(), property.getName(), s);
@@ -584,7 +584,7 @@ public class BlockStateParser {
     private static <T extends Comparable<T>> void appendProperty(StringBuilder stringbuilder, Property<T> property, Comparable<?> comparable) {
         stringbuilder.append(property.getName());
         stringbuilder.append('=');
-        stringbuilder.append(property.getName(comparable));
+        stringbuilder.append(property.getName((T) comparable));
     }
 
     public static record BlockResult(BlockState blockState, Map<Property<?>, Comparable<?>> properties, @Nullable CompoundTag nbt) {
