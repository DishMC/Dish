diff --git a/minecraft/util/datafix/fixes/AttributesRename.java b/minecraft/util/datafix/fixes/AttributesRename.java
index 567d04d..8fd2648 100644
--- a/minecraft/util/datafix/fixes/AttributesRename.java
+++ b/minecraft/util/datafix/fixes/AttributesRename.java
@@ -13,10 +13,11 @@ import com.mojang.serialization.Dynamic;
 import java.util.Map;
 import java.util.Objects;
 import java.util.Optional;
+import java.util.stream.Stream;
 
 public class AttributesRename extends DataFix {
 
-    private static final Map<String, String> RENAMES = ImmutableMap.builder().put("generic.maxHealth", "generic.max_health").put("Max Health", "generic.max_health").put("zombie.spawnReinforcements", "zombie.spawn_reinforcements").put("Spawn Reinforcements Chance", "zombie.spawn_reinforcements").put("horse.jumpStrength", "horse.jump_strength").put("Jump Strength", "horse.jump_strength").put("generic.followRange", "generic.follow_range").put("Follow Range", "generic.follow_range").put("generic.knockbackResistance", "generic.knockback_resistance").put("Knockback Resistance", "generic.knockback_resistance").put("generic.movementSpeed", "generic.movement_speed").put("Movement Speed", "generic.movement_speed").put("generic.flyingSpeed", "generic.flying_speed").put("Flying Speed", "generic.flying_speed").put("generic.attackDamage", "generic.attack_damage").put("generic.attackKnockback", "generic.attack_knockback").put("generic.attackSpeed", "generic.attack_speed").put("generic.armorToughness", "generic.armor_toughness").build();
+    private static final Map<String, String> RENAMES = ImmutableMap.<String, String>builder().put("generic.maxHealth", "generic.max_health").put("Max Health", "generic.max_health").put("zombie.spawnReinforcements", "zombie.spawn_reinforcements").put("Spawn Reinforcements Chance", "zombie.spawn_reinforcements").put("horse.jumpStrength", "horse.jump_strength").put("Jump Strength", "horse.jump_strength").put("generic.followRange", "generic.follow_range").put("Follow Range", "generic.follow_range").put("generic.knockbackResistance", "generic.knockback_resistance").put("Knockback Resistance", "generic.knockback_resistance").put("generic.movementSpeed", "generic.movement_speed").put("Movement Speed", "generic.movement_speed").put("generic.flyingSpeed", "generic.flying_speed").put("Flying Speed", "generic.flying_speed").put("generic.attackDamage", "generic.attack_damage").put("generic.attackKnockback", "generic.attack_knockback").put("generic.attackSpeed", "generic.attack_speed").put("generic.armorToughness", "generic.armor_toughness").build();
 
     public AttributesRename(Schema schema) {
         super(schema, false);
@@ -32,7 +33,7 @@ public class AttributesRename extends DataFix {
     }
 
     private static Dynamic<?> fixName(Dynamic<?> dynamic) {
-        Optional optional = dynamic.asString().result().map((s) -> {
+        Optional<String> optional = dynamic.asString().result().map((s) -> {
             return (String) AttributesRename.RENAMES.getOrDefault(s, s);
         });
 
@@ -43,7 +44,7 @@ public class AttributesRename extends DataFix {
     private static Typed<?> fixItemStackTag(Typed<?> typed) {
         return typed.update(DSL.remainderFinder(), (dynamic) -> {
             return dynamic.update("AttributeModifiers", (dynamic1) -> {
-                Optional optional = dynamic1.asStreamOpt().result().map((stream) -> {
+                Optional<Stream<Dynamic<?>>> optional = dynamic1.asStreamOpt().result().map((stream) -> {
                     return stream.map((dynamic2) -> {
                         return dynamic2.update("AttributeName", AttributesRename::fixName);
                     });
@@ -58,7 +59,7 @@ public class AttributesRename extends DataFix {
     private static Typed<?> fixEntity(Typed<?> typed) {
         return typed.update(DSL.remainderFinder(), (dynamic) -> {
             return dynamic.update("Attributes", (dynamic1) -> {
-                Optional optional = dynamic1.asStreamOpt().result().map((stream) -> {
+                Optional<Stream<Dynamic<?>>> optional = dynamic1.asStreamOpt().result().map((stream) -> {
                     return stream.map((dynamic2) -> {
                         return dynamic2.update("Name", AttributesRename::fixName);
                     });
