diff --git a/minecraft/stats/StatFormatter.java b/minecraft/stats/StatFormatter.java
index 788677b..05e0ce5 100644
--- a/minecraft/stats/StatFormatter.java
+++ b/minecraft/stats/StatFormatter.java
@@ -8,39 +8,30 @@ import java.util.Objects;
 import net.minecraft.Util;
 
 public interface StatFormatter {
+    NumberFormat numberformat = NumberFormat.getIntegerInstance(Locale.US);
 
     DecimalFormat DECIMAL_FORMAT = (DecimalFormat) Util.make(new DecimalFormat("########0.00"), (decimalformat) -> {
         decimalformat.setDecimalFormatSymbols(DecimalFormatSymbols.getInstance(Locale.ROOT));
     });
-    StatFormatter DEFAULT;
-    StatFormatter DIVIDE_BY_TEN;
-    StatFormatter DISTANCE;
-    StatFormatter TIME;
+    StatFormatter DEFAULT = numberformat::format;
+    StatFormatter DIVIDE_BY_TEN = (i) -> {
+        return StatFormatter.DECIMAL_FORMAT.format((double) i * 0.1D);
+    };
+    StatFormatter DISTANCE = (i) -> {
+        double d0 = (double) i / 100.0D;
+        double d1 = d0 / 1000.0D;
+
+        return d1 > 0.5D ? StatFormatter.DECIMAL_FORMAT.format(d1) + " km" : (d0 > 0.5D ? StatFormatter.DECIMAL_FORMAT.format(d0) + " m" : i + " cm");
+    };
+    StatFormatter TIME =  (i) -> {
+        double d0 = (double) i / 20.0D;
+        double d1 = d0 / 60.0D;
+        double d2 = d1 / 60.0D;
+        double d3 = d2 / 24.0D;
+        double d4 = d3 / 365.0D;
+
+        return d4 > 0.5D ? StatFormatter.DECIMAL_FORMAT.format(d4) + " y" : (d3 > 0.5D ? StatFormatter.DECIMAL_FORMAT.format(d3) + " d" : (d2 > 0.5D ? StatFormatter.DECIMAL_FORMAT.format(d2) + " h" : (d1 > 0.5D ? StatFormatter.DECIMAL_FORMAT.format(d1) + " m" : d0 + " s")));
+    };
 
     String format(int i);
-
-    static {
-        NumberFormat numberformat = NumberFormat.getIntegerInstance(Locale.US);
-
-        Objects.requireNonNull(numberformat);
-        DEFAULT = numberformat::format;
-        DIVIDE_BY_TEN = (i) -> {
-            return StatFormatter.DECIMAL_FORMAT.format((double) i * 0.1D);
-        };
-        DISTANCE = (i) -> {
-            double d0 = (double) i / 100.0D;
-            double d1 = d0 / 1000.0D;
-
-            return d1 > 0.5D ? StatFormatter.DECIMAL_FORMAT.format(d1) + " km" : (d0 > 0.5D ? StatFormatter.DECIMAL_FORMAT.format(d0) + " m" : i + " cm");
-        };
-        TIME = (i) -> {
-            double d0 = (double) i / 20.0D;
-            double d1 = d0 / 60.0D;
-            double d2 = d1 / 60.0D;
-            double d3 = d2 / 24.0D;
-            double d4 = d3 / 365.0D;
-
-            return d4 > 0.5D ? StatFormatter.DECIMAL_FORMAT.format(d4) + " y" : (d3 > 0.5D ? StatFormatter.DECIMAL_FORMAT.format(d3) + " d" : (d2 > 0.5D ? StatFormatter.DECIMAL_FORMAT.format(d2) + " h" : (d1 > 0.5D ? StatFormatter.DECIMAL_FORMAT.format(d1) + " m" : d0 + " s")));
-        };
-    }
 }
