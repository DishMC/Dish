diff --git a/minecraft/world/entity/ai/sensing/WardenEntitySensor.java b/minecraft/world/entity/ai/sensing/WardenEntitySensor.java
index 9f58e38..a67d434 100644
--- a/minecraft/world/entity/ai/sensing/WardenEntitySensor.java
+++ b/minecraft/world/entity/ai/sensing/WardenEntitySensor.java
@@ -33,14 +33,14 @@ public class WardenEntitySensor extends NearestLivingEntitySensor<Warden> {
                 return livingentity.getType() != EntityType.PLAYER;
             });
         }).ifPresentOrElse((livingentity) -> {
-            warden.getBrain().setMemory(MemoryModuleType.NEAREST_ATTACKABLE, (Object) livingentity);
+            warden.getBrain().setMemory(MemoryModuleType.NEAREST_ATTACKABLE, livingentity);
         }, () -> {
             warden.getBrain().eraseMemory(MemoryModuleType.NEAREST_ATTACKABLE);
         });
     }
 
     private static Optional<LivingEntity> getClosest(Warden warden, Predicate<LivingEntity> predicate) {
-        Stream stream = warden.getBrain().getMemory(MemoryModuleType.NEAREST_LIVING_ENTITIES).stream().flatMap(Collection::stream);
+        Stream<LivingEntity> stream = warden.getBrain().getMemory(MemoryModuleType.NEAREST_LIVING_ENTITIES).stream().flatMap(Collection::stream);
 
         Objects.requireNonNull(warden);
         return stream.filter(warden::canTargetEntity).filter(predicate).findFirst();
