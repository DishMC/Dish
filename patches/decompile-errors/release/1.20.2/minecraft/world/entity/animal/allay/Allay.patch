diff --git a/minecraft/world/entity/animal/allay/Allay.java b/minecraft/world/entity/animal/allay/Allay.java
index a04af82..17df9d9 100644
--- a/minecraft/world/entity/animal/allay/Allay.java
+++ b/minecraft/world/entity/animal/allay/Allay.java
@@ -122,7 +122,7 @@ public class Allay extends PathfinderMob implements InventoryCarrier, VibrationS
 
     @Override
     public Brain<Allay> getBrain() {
-        return super.getBrain();
+        return (Brain<Allay>) super.getBrain();
     }
 
     public static AttributeSupplier.Builder createAttributes() {
@@ -310,7 +310,7 @@ public class Allay extends PathfinderMob implements InventoryCarrier, VibrationS
             this.setItemInHand(InteractionHand.MAIN_HAND, itemstack2);
             this.removeInteractionItem(player, itemstack);
             this.level().playSound(player, (Entity) this, SoundEvents.ALLAY_ITEM_GIVEN, SoundSource.NEUTRAL, 2.0F, 1.0F);
-            this.getBrain().setMemory(MemoryModuleType.LIKED_PLAYER, (Object) player.getUUID());
+            this.getBrain().setMemory(MemoryModuleType.LIKED_PLAYER, player.getUUID());
             return InteractionResult.SUCCESS;
         } else if (!itemstack1.isEmpty() && interactionhand == InteractionHand.MAIN_HAND && itemstack.isEmpty()) {
             this.setItemSlot(EquipmentSlot.MAINHAND, ItemStack.EMPTY);
@@ -471,7 +471,7 @@ public class Allay extends PathfinderMob implements InventoryCarrier, VibrationS
     public void addAdditionalSaveData(CompoundTag compoundtag) {
         super.addAdditionalSaveData(compoundtag);
         this.writeInventoryToTag(compoundtag);
-        DataResult dataresult = VibrationSystem.Data.CODEC.encodeStart(NbtOps.INSTANCE, this.vibrationData);
+        DataResult<Tag> dataresult = VibrationSystem.Data.CODEC.encodeStart(NbtOps.INSTANCE, this.vibrationData);
         Logger logger = Allay.LOGGER;
 
         Objects.requireNonNull(logger);
@@ -487,7 +487,7 @@ public class Allay extends PathfinderMob implements InventoryCarrier, VibrationS
         super.readAdditionalSaveData(compoundtag);
         this.readInventoryFromTag(compoundtag);
         if (compoundtag.contains("listener", 10)) {
-            DataResult dataresult = VibrationSystem.Data.CODEC.parse(new Dynamic(NbtOps.INSTANCE, compoundtag.getCompound("listener")));
+            DataResult<Data> dataresult = VibrationSystem.Data.CODEC.parse(new Dynamic<>(NbtOps.INSTANCE, compoundtag.getCompound("listener")));
             Logger logger = Allay.LOGGER;
 
             Objects.requireNonNull(logger);
