diff --git a/minecraft/world/level/storage/loot/functions/ApplyBonusCount.java b/minecraft/world/level/storage/loot/functions/ApplyBonusCount.java
index 1bf8037..41bac0d 100644
--- a/minecraft/world/level/storage/loot/functions/ApplyBonusCount.java
+++ b/minecraft/world/level/storage/loot/functions/ApplyBonusCount.java
@@ -55,7 +55,7 @@ public class ApplyBonusCount extends LootItemConditionalFunction {
                 Object object = maplike.get("parameters");
 
                 Objects.requireNonNull(dynamicops);
-                T t1 = Objects.requireNonNullElseGet(object, dynamicops::emptyMap);
+                T t1 = (T) Objects.requireNonNullElseGet(object, dynamicops::emptyMap);
 
                 return ((ApplyBonusCount.FormulaType) pair.getFirst()).codec().decode(dynamicops, t1).map(Pair::getFirst);
             });
@@ -75,7 +75,7 @@ public class ApplyBonusCount extends LootItemConditionalFunction {
         }
 
         private <T, F extends ApplyBonusCount.Formula> DataResult<T> encode(Codec<F> codec, ApplyBonusCount.Formula applybonuscount_formula, DynamicOps<T> dynamicops) {
-            return codec.encodeStart(dynamicops, applybonuscount_formula);
+            return codec.encodeStart(dynamicops, (F) applybonuscount_formula);
         }
     };
     public static final Codec<ApplyBonusCount> CODEC = RecordCodecBuilder.create((instance) -> {
