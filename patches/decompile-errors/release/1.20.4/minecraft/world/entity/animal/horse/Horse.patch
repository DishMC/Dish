diff --git a/minecraft/world/entity/animal/horse/Horse.java b/minecraft/world/entity/animal/horse/Horse.java
index 899369a..d0f75fc 100644
--- a/minecraft/world/entity/animal/horse/Horse.java
+++ b/minecraft/world/entity/animal/horse/Horse.java
@@ -106,7 +106,7 @@ public class Horse extends AbstractHorse implements VariantHolder<Variant> {
     }
 
     private void setVariantAndMarkings(Variant variant, Markings markings) {
-        this.setTypeVariant(variant1.getId() & 255 | markings.getId() << 8 & '\uff00');
+        this.setTypeVariant(variant.getId() & 255 | markings.getId() << 8 & '\uff00');
     }
 
     @Override
@@ -115,7 +115,7 @@ public class Horse extends AbstractHorse implements VariantHolder<Variant> {
     }
 
     public void setVariant(Variant variant) {
-        this.setTypeVariant(variant1.getId() & 255 | this.getTypeVariant() & -256);
+        this.setTypeVariant(variant.getId() & 255 | this.getTypeVariant() & -256);
     }
 
     public Markings getMarkings() {
@@ -243,11 +243,11 @@ public class Horse extends AbstractHorse implements VariantHolder<Variant> {
                 Variant variant;
 
                 if (i < 4) {
-                    variant1 = this.getVariant();
+                    variant = this.getVariant();
                 } else if (i < 8) {
-                    variant2 = horse.getVariant();
+                    variant = horse.getVariant();
                 } else {
-                    variant3 = (Variant) Util.getRandom((Object[]) Variant.values(), this.random);
+                    variant = (Variant) Util.getRandom((Object[]) Variant.values(), this.random);
                 }
 
                 int j = this.random.nextInt(5);
@@ -261,7 +261,7 @@ public class Horse extends AbstractHorse implements VariantHolder<Variant> {
                     markings = (Markings) Util.getRandom((Object[]) Markings.values(), this.random);
                 }
 
-                horse1.setVariantAndMarkings(variant4, markings);
+                horse1.setVariantAndMarkings(variant, markings);
                 this.setOffspringAttributes(ageablemob, horse1);
             }
 
@@ -286,13 +286,13 @@ public class Horse extends AbstractHorse implements VariantHolder<Variant> {
         Variant variant;
 
         if (spawngroupdata instanceof Horse.HorseGroupData) {
-            variant1 = ((Horse.HorseGroupData) spawngroupdata).variant;
+            variant = ((Horse.HorseGroupData) spawngroupdata).variant;
         } else {
-            variant2 = (Variant) Util.getRandom((Object[]) Variant.values(), randomsource);
-            spawngroupdata = new Horse.HorseGroupData(variant3);
+            variant = (Variant) Util.getRandom((Object[]) Variant.values(), randomsource);
+            spawngroupdata = new Horse.HorseGroupData(variant);
         }
 
-        this.setVariantAndMarkings(variant4, (Markings) Util.getRandom((Object[]) Markings.values(), randomsource));
+        this.setVariantAndMarkings(variant, (Markings) Util.getRandom((Object[]) Markings.values(), randomsource));
         return super.finalizeSpawn(serverlevelaccessor, difficultyinstance, mobspawntype, (SpawnGroupData) spawngroupdata, compoundtag);
     }
 
@@ -302,7 +302,7 @@ public class Horse extends AbstractHorse implements VariantHolder<Variant> {
 
         public HorseGroupData(Variant variant) {
             super(true);
-            this.variant = variant1;
+            this.variant = variant;
         }
     }
 }
