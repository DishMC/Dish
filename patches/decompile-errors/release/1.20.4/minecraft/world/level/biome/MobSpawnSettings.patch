diff --git a/minecraft/world/level/biome/MobSpawnSettings.java b/minecraft/world/level/biome/MobSpawnSettings.java
index a483201..44c1282 100644
--- a/minecraft/world/level/biome/MobSpawnSettings.java
+++ b/minecraft/world/level/biome/MobSpawnSettings.java
@@ -33,15 +33,9 @@ public class MobSpawnSettings {
     public static final WeightedRandomList<MobSpawnSettings.SpawnerData> EMPTY_MOB_LIST = WeightedRandomList.create();
     public static final MobSpawnSettings EMPTY = (new MobSpawnSettings.Builder()).build();
     public static final MapCodec<MobSpawnSettings> CODEC = RecordCodecBuilder.mapCodec((instance) -> {
-        RecordCodecBuilder recordcodecbuilder = Codec.floatRange(0.0F, 0.9999999F).optionalFieldOf("creature_spawn_probability", 0.1F).forGetter((mobspawnsettings) -> {
+        return instance.group(Codec.floatRange(0.0F, 0.9999999F).optionalFieldOf("creature_spawn_probability", 0.1F).forGetter((mobspawnsettings) -> {
             return mobspawnsettings.creatureGenerationProbability;
-        });
-        Codec codec = MobCategory.CODEC;
-        Codec codec1 = WeightedRandomList.codec(MobSpawnSettings.SpawnerData.CODEC);
-        Logger logger = MobSpawnSettings.LOGGER;
-
-        Objects.requireNonNull(logger);
-        return instance.group(recordcodecbuilder, Codec.simpleMap(codec, codec1.promotePartial(Util.prefix("Spawn data: ", logger::error)), StringRepresentable.keys(MobCategory.values())).fieldOf("spawners").forGetter((mobspawnsettings) -> {
+        }), Codec.simpleMap(MobCategory.CODEC, WeightedRandomList.codec(MobSpawnSettings.SpawnerData.CODEC).promotePartial(Util.prefix("Spawn data: ", MobSpawnSettings.LOGGER::error)), StringRepresentable.keys(MobCategory.values())).fieldOf("spawners").forGetter((mobspawnsettings) -> {
             return mobspawnsettings.spawners;
         }), Codec.simpleMap(BuiltInRegistries.ENTITY_TYPE.byNameCodec(), MobSpawnSettings.MobSpawnCost.CODEC, BuiltInRegistries.ENTITY_TYPE).fieldOf("spawn_costs").forGetter((mobspawnsettings) -> {
             return mobspawnsettings.mobSpawnCosts;
