diff --git a/minecraft/commands/execution/tasks/BuildContexts.java b/minecraft/commands/execution/tasks/BuildContexts.java
index 16a5ca0..26746cf 100644
--- a/minecraft/commands/execution/tasks/BuildContexts.java
+++ b/minecraft/commands/execution/tasks/BuildContexts.java
@@ -70,7 +70,7 @@ public class BuildContexts<T extends ExecutionCommandSource<T>> {
 
                         while (iterator.hasNext()) {
                             executioncommandsource = (ExecutionCommandSource) iterator.next();
-                            Collection<T> collection = ContextChain.runModifier(commandcontext, executioncommandsource, ExecutionCommandSource.resultConsumer(), flag1);
+                            Collection<T> collection = ContextChain.<T>runModifier(commandcontext, (T) executioncommandsource, ExecutionCommandSource.resultConsumer(), flag1);
 
                             list2.addAll(collection);
                             if (list2.size() >= j) {
@@ -97,12 +97,12 @@ public class BuildContexts<T extends ExecutionCommandSource<T>> {
 
             while (iterator.hasNext()) {
                 executioncommandsource = (ExecutionCommandSource) iterator.next();
-                customcommandexecutor.run(executioncommandsource, contextchain, flag1, executioncontrol);
+                customcommandexecutor.run((T) executioncommandsource, contextchain, flag1, executioncontrol);
             }
         } else {
             ExecuteCommand<T> executecommand = new ExecuteCommand<>(this.commandInput, flag1, commandcontext1);
 
-            ContinuationTask.schedule(executioncontext, i, (List) list1, (k, executioncommandsource1) -> {
+            ContinuationTask.schedule(executioncontext, i, list1, (k, executioncommandsource1) -> {
                 return new CommandQueueEntry<>(k, executecommand.bind(executioncommandsource1));
             });
         }
