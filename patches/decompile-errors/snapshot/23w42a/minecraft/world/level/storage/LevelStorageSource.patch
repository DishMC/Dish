diff --git a/minecraft/world/level/storage/LevelStorageSource.java b/minecraft/world/level/storage/LevelStorageSource.java
index e480065..66dd72d 100644
--- a/minecraft/world/level/storage/LevelStorageSource.java
+++ b/minecraft/world/level/storage/LevelStorageSource.java
@@ -155,7 +155,7 @@ public class LevelStorageSource {
     }
 
     public static WorldDataConfiguration readDataConfig(Dynamic<?> dynamic) {
-        DataResult dataresult = WorldDataConfiguration.CODEC.parse(dynamic);
+        DataResult<WorldDataConfiguration> dataresult = WorldDataConfiguration.CODEC.parse(dynamic);
         Logger logger = LevelStorageSource.LOGGER;
 
         Objects.requireNonNull(logger);
@@ -197,7 +197,7 @@ public class LevelStorageSource {
             throw new LevelStorageException(Component.translatable("selectWorld.load_folder_access"));
         } else {
             try {
-                Stream stream = Files.list(this.baseDir);
+                Stream<Path> stream = Files.list(this.baseDir);
 
                 LevelStorageSource.LevelCandidates levelstoragesource_levelcandidates;
 
@@ -535,7 +535,7 @@ public class LevelStorageSource {
         }
 
         public Path getLevelPath(LevelResource levelresource) {
-            Map map = this.resources;
+            Map<LevelResource, Path> map = this.resources;
             LevelStorageSource.LevelDirectory levelstoragesource_leveldirectory = this.levelDirectory;
 
             Objects.requireNonNull(this.levelDirectory);
@@ -627,13 +627,13 @@ public class LevelStorageSource {
                     } else {
                         object = exception2;
                     }
-
+                    File finalFile = file1;
                     crashreportcategory.setDetail("Reading Exception", (Object) ((Throwable) object).toString());
                     crashreportcategory.setDetail("Uncompressed", () -> {
                         return Base64.getEncoder().encodeToString(NbtIo.writeToByteArray(compoundtag));
                     });
                     crashreportcategory.setDetail("Compressed saved", () -> {
-                        return Base64.getEncoder().encodeToString(Files.readAllBytes(file1.toPath()));
+                        return Base64.getEncoder().encodeToString(Files.readAllBytes(finalFile.toPath()));
                     });
                     crashreportcategory.setDetail("Compressed array", () -> {
                         return Base64.getEncoder().encodeToString(NbtIo.writeToByteArrayCompressed(compoundtag));
@@ -643,7 +643,7 @@ public class LevelStorageSource {
                     crashreportcategory.setDetail("Corrupted file", () -> {
                         Path path = this.levelDirectory.corruptedDataFile(localdatetime);
 
-                        Files.move(file1.toPath(), path);
+                        Files.move(finalFile.toPath(), path);
                         return path.getFileName().toString();
                     });
                     crashreportcategory.setDetail("Raw file", () -> {
