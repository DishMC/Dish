diff --git a/minecraft/util/datafix/fixes/ChunkProtoTickListFix.java b/minecraft/util/datafix/fixes/ChunkProtoTickListFix.java
index cfc3c6f..34a335b 100644
--- a/minecraft/util/datafix/fixes/ChunkProtoTickListFix.java
+++ b/minecraft/util/datafix/fixes/ChunkProtoTickListFix.java
@@ -115,7 +115,7 @@ public class ChunkProtoTickListFix extends DataFix {
         for (int k = 0; k < list.size(); ++k) {
             int l = k + b0;
             Supplier<ChunkProtoTickListFix.PoorMansPalettedContainer> supplier = (Supplier) int2objectmap.get(l);
-            Stream<? extends Dynamic<?>> stream1 = ((Dynamic) list.get(k)).asStream().mapToInt((dynamic1) -> {
+            Stream<? extends Dynamic<?>> stream1 = (list.get(k)).asStream().mapToInt((dynamic1) -> {
                 return dynamic1.asShort((short) -1);
             }).filter((i1) -> {
                 return i1 > 0;
@@ -149,7 +149,7 @@ public class ChunkProtoTickListFix extends DataFix {
         int k1 = l >>> 8 & 15;
         String s = (String) function.apply(supplier != null ? ((ChunkProtoTickListFix.PoorMansPalettedContainer) supplier.get()).get(i1, j1, k1) : null);
 
-        return dynamic.createMap(ImmutableMap.builder().put(dynamic.createString("i"), dynamic.createString(s)).put(dynamic.createString("x"), dynamic.createInt(i * 16 + i1)).put(dynamic.createString("y"), dynamic.createInt(j * 16 + j1)).put(dynamic.createString("z"), dynamic.createInt(k * 16 + k1)).put(dynamic.createString("t"), dynamic.createInt(0)).put(dynamic.createString("p"), dynamic.createInt(0)).build());
+        return dynamic.createMap(ImmutableMap.<Dynamic<?>, Dynamic<?>>builder().put(dynamic.createString("i"), dynamic.createString(s)).put(dynamic.createString("x"), dynamic.createInt(i * 16 + i1)).put(dynamic.createString("y"), dynamic.createInt(j * 16 + j1)).put(dynamic.createString("z"), dynamic.createInt(k * 16 + k1)).put(dynamic.createString("t"), dynamic.createInt(0)).put(dynamic.createString("p"), dynamic.createInt(0)).build());
     }
 
     public static final class PoorMansPalettedContainer {
