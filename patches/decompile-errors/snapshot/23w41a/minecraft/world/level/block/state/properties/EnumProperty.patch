diff --git a/minecraft/world/level/block/state/properties/EnumProperty.java b/minecraft/world/level/block/state/properties/EnumProperty.java
index 477f05b..dd5973f 100644
--- a/minecraft/world/level/block/state/properties/EnumProperty.java
+++ b/minecraft/world/level/block/state/properties/EnumProperty.java
@@ -23,7 +23,7 @@ public class EnumProperty<T extends Enum<T> & StringRepresentable> extends Prope
         Iterator iterator = collection.iterator();
 
         while (iterator.hasNext()) {
-            T t0 = (Enum) iterator.next();
+            T t0 = (T) iterator.next();
             String s1 = ((StringRepresentable) t0).getSerializedName();
 
             if (this.names.containsKey(s1)) {
@@ -42,7 +42,7 @@ public class EnumProperty<T extends Enum<T> & StringRepresentable> extends Prope
 
     @Override
     public Optional<T> getValue(String s) {
-        return Optional.ofNullable((Enum) this.names.get(s));
+        return Optional.ofNullable(this.names.get(s));
     }
 
     public String getName(T t0) {
@@ -82,11 +82,11 @@ public class EnumProperty<T extends Enum<T> & StringRepresentable> extends Prope
     }
 
     public static <T extends Enum<T> & StringRepresentable> EnumProperty<T> create(String s, Class<T> oclass, Predicate<T> predicate) {
-        return create(s, oclass, (Collection) Arrays.stream((Enum[]) oclass.getEnumConstants()).filter(predicate).collect(Collectors.toList()));
+        return create(s, oclass, Arrays.stream(oclass.getEnumConstants()).filter(predicate).collect(Collectors.toList()));
     }
 
     public static <T extends Enum<T> & StringRepresentable> EnumProperty<T> create(String s, Class<T> oclass, T... at) {
-        return create(s, oclass, (Collection) Lists.newArrayList(at));
+        return create(s, oclass, Lists.newArrayList(at));
     }
 
     public static <T extends Enum<T> & StringRepresentable> EnumProperty<T> create(String s, Class<T> oclass, Collection<T> collection) {
