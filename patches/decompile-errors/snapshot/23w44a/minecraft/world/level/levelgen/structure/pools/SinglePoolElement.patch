diff --git a/minecraft/world/level/levelgen/structure/pools/SinglePoolElement.java b/minecraft/world/level/levelgen/structure/pools/SinglePoolElement.java
index b50c610..e63d442 100644
--- a/minecraft/world/level/levelgen/structure/pools/SinglePoolElement.java
+++ b/minecraft/world/level/levelgen/structure/pools/SinglePoolElement.java
@@ -33,6 +33,7 @@ import net.minecraft.world.level.levelgen.structure.BoundingBox;
 import net.minecraft.world.level.levelgen.structure.templatesystem.BlockIgnoreProcessor;
 import net.minecraft.world.level.levelgen.structure.templatesystem.JigsawReplacementProcessor;
 import net.minecraft.world.level.levelgen.structure.templatesystem.StructurePlaceSettings;
+import net.minecraft.world.level.levelgen.structure.templatesystem.StructureProcessor;
 import net.minecraft.world.level.levelgen.structure.templatesystem.StructureProcessorList;
 import net.minecraft.world.level.levelgen.structure.templatesystem.StructureProcessorType;
 import net.minecraft.world.level.levelgen.structure.templatesystem.StructureTemplate;
@@ -81,7 +82,7 @@ public class SinglePoolElement extends StructurePoolElement {
     }
 
     private StructureTemplate getTemplate(StructureTemplateManager structuretemplatemanager) {
-        Either either = this.template;
+        Either<ResourceLocation, StructureTemplate> either = this.template;
 
         Objects.requireNonNull(structuretemplatemanager);
         return (StructureTemplate) either.map(structuretemplatemanager::getOrCreate, Function.identity());
@@ -121,7 +122,7 @@ public class SinglePoolElement extends StructurePoolElement {
 
     @VisibleForTesting
     static void sortBySelectionPriority(List<StructureTemplate.StructureBlockInfo> list) {
-        list.sort(Comparator.comparingInt((structuretemplate_structureblockinfo) -> {
+        list.sort(Comparator.<StructureTemplate.StructureBlockInfo>comparingInt((structuretemplate_structureblockinfo) -> {
             return (Integer) Optionull.mapOrDefault(structuretemplate_structureblockinfo.nbt(), (compoundtag) -> {
                 return compoundtag.getInt("selection_priority");
             }, 0);
@@ -169,11 +170,11 @@ public class SinglePoolElement extends StructurePoolElement {
             structureplacesettings.addProcessor(JigsawReplacementProcessor.INSTANCE);
         }
 
-        List list = ((StructureProcessorList) this.processors.value()).list();
+        List<StructureProcessor> list = ((StructureProcessorList) this.processors.value()).list();
 
         Objects.requireNonNull(structureplacesettings);
         list.forEach(structureplacesettings::addProcessor);
-        ImmutableList immutablelist = this.getProjection().getProcessors();
+        ImmutableList<StructureProcessor> immutablelist = this.getProjection().getProcessors();
 
         Objects.requireNonNull(structureplacesettings);
         immutablelist.forEach(structureplacesettings::addProcessor);
