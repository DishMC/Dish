diff --git a/minecraft/core/RegistryAccess.java b/minecraft/core/RegistryAccess.java
index 07ba35d..2734160 100644
--- a/minecraft/core/RegistryAccess.java
+++ b/minecraft/core/RegistryAccess.java
@@ -41,9 +41,9 @@ public interface RegistryAccess extends HolderLookup.Provider {
         return new RegistryAccess.Frozen() {
             @Override
             public <T> Optional<Registry<T>> registry(ResourceKey<? extends Registry<? extends T>> resourcekey) {
-                Registry<Registry<T>> registry1 = registry;
+                Registry<Registry<T>> registry1 = (Registry<Registry<T>>)registry;
 
-                return registry1.getOptional(resourcekey);
+                return registry1.getOptional((ResourceKey<Registry<T>>)resourcekey);
             }
 
             @Override
@@ -59,15 +59,15 @@ public interface RegistryAccess extends HolderLookup.Provider {
     }
 
     default RegistryAccess.Frozen freeze() {
-        class 1FrozenAccess extends RegistryAccess.ImmutableRegistryAccess implements RegistryAccess.Frozen {
+        class FrozenAccess extends RegistryAccess.ImmutableRegistryAccess implements RegistryAccess.Frozen {
 
-            protected _FrozenAccess/* $FF was: 1FrozenAccess*/(Stream<RegistryAccess.RegistryEntry<?>> stream) {
+            protected FrozenAccess(Stream<RegistryAccess.RegistryEntry<?>> stream) {
                 super(stream);
             }
         }
 
 
-        return new 1FrozenAccess(this.registries().map(RegistryAccess.RegistryEntry::freeze));
+        return new FrozenAccess(this.registries().map(RegistryAccess.RegistryEntry::freeze));
     }
 
     default Lifecycle allRegistriesLifecycle() {
@@ -83,7 +83,7 @@ public interface RegistryAccess extends HolderLookup.Provider {
         }
 
         private static <T> RegistryAccess.RegistryEntry<T> fromUntyped(ResourceKey<? extends Registry<?>> resourcekey, Registry<?> registry) {
-            return new RegistryAccess.RegistryEntry<>(resourcekey, registry);
+            return new RegistryAccess.RegistryEntry(resourcekey, registry);
         }
 
         private RegistryAccess.RegistryEntry<T> freeze() {
