diff --git a/minecraft/util/datafix/fixes/ItemWrittenBookPagesStrictJsonFix.java b/minecraft/util/datafix/fixes/ItemWrittenBookPagesStrictJsonFix.java
index 5db15fb..715d252 100644
--- a/minecraft/util/datafix/fixes/ItemWrittenBookPagesStrictJsonFix.java
+++ b/minecraft/util/datafix/fixes/ItemWrittenBookPagesStrictJsonFix.java
@@ -10,6 +10,8 @@ import com.mojang.datafixers.types.Type;
 import com.mojang.serialization.DataResult;
 import com.mojang.serialization.Dynamic;
 import java.util.Objects;
+import java.util.stream.Stream;
+
 import net.minecraft.network.chat.CommonComponents;
 import net.minecraft.network.chat.Component;
 import net.minecraft.util.GsonHelper;
@@ -23,7 +25,7 @@ public class ItemWrittenBookPagesStrictJsonFix extends DataFix {
 
     public Dynamic<?> fixTag(Dynamic<?> dynamic) {
         return dynamic.update("pages", (dynamic1) -> {
-            DataResult dataresult = dynamic1.asStreamOpt().map((stream) -> {
+            DataResult<Stream> dataresult = dynamic1.asStreamOpt().map((stream) -> {
                 return stream.map((dynamic2) -> {
                     if (dynamic2.asString().result().isEmpty()) {
                         return dynamic2;
@@ -74,7 +76,7 @@ public class ItemWrittenBookPagesStrictJsonFix extends DataFix {
             });
 
             Objects.requireNonNull(dynamic);
-            return (Dynamic) DataFixUtils.orElse(dataresult.map(dynamic::createList).result(), dynamic.emptyList());
+            return DataFixUtils.orElse(dataresult.map(dynamic::createList).result(), dynamic.emptyList());
         });
     }
 
