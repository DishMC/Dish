diff --git a/minecraft/server/level/ServerPlayer.java b/minecraft/server/level/ServerPlayer.java
index 8c21822..ddb1b47 100644
--- a/minecraft/server/level/ServerPlayer.java
+++ b/minecraft/server/level/ServerPlayer.java
@@ -33,6 +33,7 @@ import net.minecraft.core.SectionPos;
 import net.minecraft.core.registries.BuiltInRegistries;
 import net.minecraft.nbt.CompoundTag;
 import net.minecraft.nbt.NbtOps;
+import net.minecraft.nbt.Tag;
 import net.minecraft.network.PacketSendListener;
 import net.minecraft.network.chat.ChatType;
 import net.minecraft.network.chat.CommonComponents;
@@ -336,7 +337,7 @@ public class ServerPlayer extends Player {
     public void readAdditionalSaveData(CompoundTag compoundtag) {
         super.readAdditionalSaveData(compoundtag);
         if (compoundtag.contains("warden_spawn_tracker", 10)) {
-            DataResult dataresult = WardenSpawnTracker.CODEC.parse(new Dynamic(NbtOps.INSTANCE, compoundtag.get("warden_spawn_tracker")));
+            DataResult<WardenSpawnTracker> dataresult = WardenSpawnTracker.CODEC.parse(new Dynamic<>(NbtOps.INSTANCE, compoundtag.get("warden_spawn_tracker")));
             Logger logger = ServerPlayer.LOGGER;
 
             Objects.requireNonNull(logger);
@@ -365,7 +366,7 @@ public class ServerPlayer extends Player {
             this.respawnForced = compoundtag.getBoolean("SpawnForced");
             this.respawnAngle = compoundtag.getFloat("SpawnAngle");
             if (compoundtag.contains("SpawnDimension")) {
-                DataResult dataresult1 = Level.RESOURCE_KEY_CODEC.parse(NbtOps.INSTANCE, compoundtag.get("SpawnDimension"));
+                DataResult<ResourceKey<Level>> dataresult1 = Level.RESOURCE_KEY_CODEC.parse(NbtOps.INSTANCE, compoundtag.get("SpawnDimension"));
                 Logger logger1 = ServerPlayer.LOGGER;
 
                 Objects.requireNonNull(logger1);
@@ -378,7 +379,7 @@ public class ServerPlayer extends Player {
     @Override
     public void addAdditionalSaveData(CompoundTag compoundtag) {
         super.addAdditionalSaveData(compoundtag);
-        DataResult dataresult = WardenSpawnTracker.CODEC.encodeStart(NbtOps.INSTANCE, this.wardenSpawnTracker);
+        DataResult<Tag> dataresult = WardenSpawnTracker.CODEC.encodeStart(NbtOps.INSTANCE, this.wardenSpawnTracker);
         Logger logger = ServerPlayer.LOGGER;
 
         Objects.requireNonNull(logger);
