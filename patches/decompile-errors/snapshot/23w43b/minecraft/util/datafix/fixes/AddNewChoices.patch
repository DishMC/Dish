diff --git a/minecraft/util/datafix/fixes/AddNewChoices.java b/minecraft/util/datafix/fixes/AddNewChoices.java
index 335cae5..f8ca24e 100644
--- a/minecraft/util/datafix/fixes/AddNewChoices.java
+++ b/minecraft/util/datafix/fixes/AddNewChoices.java
@@ -5,6 +5,8 @@ import com.mojang.datafixers.DataFix;
 import com.mojang.datafixers.TypeRewriteRule;
 import com.mojang.datafixers.schemas.Schema;
 import com.mojang.datafixers.types.templates.TaggedChoice.TaggedChoiceType;
+import com.mojang.datafixers.util.Pair;
+
 import java.util.Locale;
 
 public class AddNewChoices extends DataFix {
@@ -29,9 +31,9 @@ public class AddNewChoices extends DataFix {
         if (taggedchoicetype.getKeyType() != taggedchoicetype1.getKeyType()) {
             throw new IllegalStateException("Could not inject: key type is not the same");
         } else {
-            return this.fixTypeEverywhere(s, taggedchoicetype, taggedchoicetype1, (dynamicops) -> {
+            return this.fixTypeEverywhere(s, taggedchoicetype, (TaggedChoiceType<K>)taggedchoicetype1, (dynamicops) -> {
                 return (pair) -> {
-                    if (!taggedchoicetype1.hasType(pair.getFirst())) {
+                    if (!((TaggedChoiceType<K>)taggedchoicetype1).hasType(pair.getFirst())) {
                         throw new IllegalArgumentException(String.format(Locale.ROOT, "Unknown type %s in %s ", pair.getFirst(), this.type));
                     } else {
                         return pair;
