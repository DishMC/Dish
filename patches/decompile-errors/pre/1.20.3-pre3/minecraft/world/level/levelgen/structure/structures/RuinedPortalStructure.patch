diff --git a/minecraft/world/level/levelgen/structure/structures/RuinedPortalStructure.java b/minecraft/world/level/levelgen/structure/structures/RuinedPortalStructure.java
index 6b6e6a2..aa8783c 100644
--- a/minecraft/world/level/levelgen/structure/structures/RuinedPortalStructure.java
+++ b/minecraft/world/level/levelgen/structure/structures/RuinedPortalStructure.java
@@ -113,12 +113,13 @@ public class RuinedPortalStructure extends Structure {
             int j = findSuitableY(worldgenrandom, chunkgenerator, ruinedportalstructure_setup.placement(), ruinedportalpiece_properties.airPocket, i, boundingbox.getYSpan(), boundingbox, levelheightaccessor, randomstate);
             BlockPos blockpos3 = new BlockPos(blockpos1.getX(), j, blockpos1.getZ());
 
+            Setup finalRuinedportalstructure_setup = ruinedportalstructure_setup;
             return Optional.of(new Structure.GenerationStub(blockpos3, (structurepiecesbuilder) -> {
-                if (ruinedportalstructure_setup.canBeCold()) {
+                if (finalRuinedportalstructure_setup.canBeCold()) {
                     ruinedportalpiece_properties.cold = isCold(blockpos3, structure_generationcontext.chunkGenerator().getBiomeSource().getNoiseBiome(QuartPos.fromBlock(blockpos3.getX()), QuartPos.fromBlock(blockpos3.getY()), QuartPos.fromBlock(blockpos3.getZ()), randomstate.sampler()));
                 }
 
-                structurepiecesbuilder.addPiece(new RuinedPortalPiece(structure_generationcontext.structureTemplateManager(), blockpos3, ruinedportalstructure_setup.placement(), ruinedportalpiece_properties, resourcelocation, structuretemplate, rotation, mirror, blockpos));
+                structurepiecesbuilder.addPiece(new RuinedPortalPiece(structure_generationcontext.structureTemplateManager(), blockpos3, finalRuinedportalstructure_setup.placement(), ruinedportalpiece_properties, resourcelocation, structuretemplate, rotation, mirror, blockpos));
             }));
         }
     }
